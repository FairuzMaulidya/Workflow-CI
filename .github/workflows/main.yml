name: CI_MLflow_Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with Git LFS
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check environment
        run: |
          echo "Python version:"
          python --version
          echo "MLflow tracking URI: $MLFLOW_TRACKING_URI"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.9.2 joblib scikit-learn pandas numpy matplotlib gitpython

      - name: Run MLflow project
        run: |
          cd MLProject
          echo "🏃 Running MLflow model training..."
          python modelling.py 100 10
          echo "✅ MLflow training completed."
          echo "Contents of MLProject:"
          ls -R .

      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td MLProject/mlruns/0/*/ | head -n 1 | cut -d'/' -f4)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest MLflow Run ID: $RUN_ID"

      - name: Commit and push MLflow artifacts via Git LFS
        run: |
          echo "🪶 Setting up Git..."
          git config --global user.name "${{ secrets.username }}"
          git config --global user.email "${{ secrets.email }}"
          git lfs install

          echo "📦 Adding MLflow run artifacts to Git LFS..."
          git add -f MLProject/mlruns/
          git commit -m "Upload MLflow artifacts from CI" || echo "No changes to commit"

          echo "🔐 Setting remote URL for push..."
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          echo "🚀 Pushing MLflow artifacts to GitHub..."
          git push origin main || echo "No changes pushed"
          echo "✅ MLflow artifacts pushed successfully."

      - name: Build Docker Model from MLflow artifacts
        run: |
          cd MLProject
          RUN_PATH=$(ls -td mlruns/0/*/ | grep -v datasets | head -n 1)
          MODEL_PATH="$RUN_PATH/artifacts/model"

          echo "⚙️ Generating Dockerfile from MLflow model..."
          mlflow models generate-dockerfile \
            --model-uri "$MODEL_PATH" \
            --output-directory docker_build \
            --env-manager local

          echo "🧩 Adjusting Dockerfile base image..."
          sed -i '1i FROM python:3.10-slim' docker_build/Dockerfile

          echo "🧹 Cleaning up unnecessary dependencies..."
          sed -i '/openjdk/d' docker_build/Dockerfile
          sed -i '/maven/d' docker_build/Dockerfile
          sed -i '/mvn/d' docker_build/Dockerfile
          sed -i '/java/d' docker_build/Dockerfile

          echo "🔍 Preview of Dockerfile:"
          head -n 25 docker_build/Dockerfile

          echo "🏗️ Building Docker image..."
          cd docker_build
          docker build -t workflow-ci .
          echo "✅ Docker image build completed."

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag workflow-ci ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest
          echo "🏷️ Docker image tagged as latest."

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest
          echo "✅ Docker image successfully pushed to Docker Hub."

      - name: Complete job
        run: echo "🎉 CI workflow completed successfully."
