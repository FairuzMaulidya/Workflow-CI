name: CI_MLflow_Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting CI job..."

      - name: Run actions/checkout@v3
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check Env
        run: |
          echo "Python version:"
          python --version
          echo "MLflow URI: $MLFLOW_TRACKING_URI"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install mlflow==2.9.2 joblib scikit-learn pandas numpy matplotlib

      - name: Run mlflow project
        run: |
          cd MLProject
          python modelling.py 100 10
          echo "MLflow project completed."

      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td MLProject/mlruns/0/*/ | head -n 1 | cut -d'/' -f4)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      - name: Install Python dependencies
        run: |
          pip install gitpython

      - name: Upload to GitHub LFS 
        run: | 
          git config --global user.name ${{ secrets.username }} 
          git config --global user.email ${{ secrets.email }} 
          git lfs install 
          git add -f MLProject/mlruns/ 
          git commit -m "Save mlruns from CI run" || true 
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git 
          git push origin main echo "Upload to GitHub LFS Done"
      - name: Build Docker Model
        run: |
          cd MLProject
          RUN_PATH=$(ls -td mlruns/0/*/ | grep -v datasets | head -n 1)
          MODEL_PATH="$RUN_PATH/artifacts/model"

          echo "Generating Dockerfile from MLflow model..."
          mlflow models generate-dockerfile \
            --model-uri "$MODEL_PATH" \
            --output-directory docker_build \
            --env-manager local

          sed -i '1i FROM python:3.10-slim' docker_build/Dockerfile
          sed -i '/openjdk/d' docker_build/Dockerfile
          sed -i '/maven/d' docker_build/Dockerfile
          sed -i '/mvn/d' docker_build/Dockerfile
          sed -i '/java/d' docker_build/Dockerfile

          cd docker_build
          docker build -t workflow-ci .
          echo "Docker image built successfully."

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag workflow-ci ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest

      - name: Complete job
        run: echo "Workflow CI selesai dengan sukses."
