name: CI_MLflow_DagsHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with Git LFS
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.9.2 joblib scikit-learn pandas numpy matplotlib gitpython

      - name: Ensure mlruns folder exists
        run: |
          mkdir -p MLProject/mlruns
          touch MLProject/mlruns/.gitkeep
          git add MLProject/mlruns/.gitkeep
          git commit -m "Ensure mlruns folder exists for Git LFS" || echo "No changes to commit"

      - name: Run MLflow project
        run: |
          cd MLProject
          echo "üèÉ Running MLflow model training..."
          python modelling.py 100 10
          echo "‚úÖ MLflow training completed."

      - name: Track MLflow artifacts with Git LFS
        run: |
          git lfs install
          git lfs track "MLProject/mlruns/**"
          git add .gitattributes
          git add MLProject/mlruns/
          git commit -m "Add MLflow run artifacts" || echo "No changes to commit"

      - name: Push artifacts to DagsHub
        run: |
          git config --global user.name "${{ secrets.DAGSHUB_USERNAME }}"
          git config --global user.email "${{ secrets.DAGSHUB_EMAIL }}"
          git remote set-url origin https://${{ secrets.DAGSHUB_USERNAME }}:${{ secrets.DAGSHUB_TOKEN }}@dagshub.com/${{ github.repository }}.git
          git push origin main || echo "No changes pushed"

      - name: Build Docker image from MLflow model
        run: |
          cd MLProject
          RUN_PATH=$(ls -td mlruns/0/*/ | grep -v datasets | head -n 1)
          MODEL_PATH="$RUN_PATH/artifacts/model"

          echo "‚öôÔ∏è Generating Dockerfile from MLflow model..."
          mlflow models generate-dockerfile \
            --model-uri "$MODEL_PATH" \
            --output-directory docker_build \
            --env-manager local

          echo "üß© Adjusting Dockerfile base image..."
          sed -i '1i FROM python:3.10-slim' docker_build/Dockerfile
          sed -i '/openjdk/d' docker_build/Dockerfile
          sed -i '/maven/d' docker_build/Dockerfile
          sed -i '/mvn/d' docker_build/Dockerfile
          sed -i '/java/d' docker_build/Dockerfile

          echo "üèóÔ∏è Building Docker image..."
          cd docker_build
          docker build -t workflow-ci .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag and Push Docker image
        run: |
          docker tag workflow-ci ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/workflow-ci:latest

      - name: Complete job
        run: echo "üéâ CI workflow completed successfully."
